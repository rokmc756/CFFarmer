---
- name: Create ECS Instance and Build Network Environment
  hosts: localhost
  tasks:
    - name: Register Region
      command: echo {{ alicloud_region }}
      register: region

    - name: Download releases Shell Script
      get_url:
        url: 'https://raw.githubusercontent.com/aliyun/cf-deployment/master/iaas-support/alicloud/download-releases.sh'
        dest: ./
        force: yes
        mode: 0755
      when: "'cn-' in region.stdout and 'cn-hongkong' not in region.stdout"

    - name: Download cf-deployment
      get_url:
        url: 'https://raw.githubusercontent.com/cloudfoundry/cf-deployment/master/cf-deployment.yml'
        dest: ./
        force: yes
      when: "'cn-' in region.stdout and 'cn-hongkong' not in region.stdout"
      # https://github.com/cloudfoundry/cf-deployment/tree/main/iaas-support/vsphere

    #- name: Dreate directory for cf releases
    #  file: path="./roles/cf-deploy/files" state=directory

    #- name: Create directory for bosh
    #  file: path="./roles/bosh-deploy/files" state=directory

    - name: Download releases and create new cf-deployment
      shell: ./download-releases.sh cf-deployment.yml roles/cf/files/releases
    #  shell: ./download-releases.sh cf-deployment.yml roles/cf-deploy/files/releases
    #  when: "'cn-' in region.stdout and 'cn-hongkong' not in region.stdout"

    #- shell: Terraform init && terraform destroy -force -var 'alicloud_access_key={{ alicloud_access_key }}' -var 'alicloud_secret_key={{ alicloud_secret_key }}' -var 'alicloud_region={{ alicloud_region }}' -var 'domain_name={{ system_domain }}'
    #  args:
    #    chdir: ./server
    #  when: delete

    #- shell: Terraform init && terraform apply --auto-approve -var 'alicloud_access_key={{ alicloud_access_key }}' -var 'alicloud_secret_key={{ alicloud_secret_key }}' -var 'alicloud_region={{ alicloud_region }}' -var 'domain_name={{ system_domain }}'
    #  args:
    #    chdir: ./server
    #  when: not delete


- name: Start Deploying
  hosts: CloudFoundaryServer
  remote_user: root
  roles:
    - bosh-cli
    - bosh-deploy
    - cf-deploy
    - app-deploy

